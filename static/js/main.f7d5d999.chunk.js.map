{"version":3,"sources":["components/machines/direction.js","components/factory/factoryLib.js","components/machines/machines.js","components/machines/materials.js","components/factory/actions.js","components/factory/reducer.js","components/raw_material_popup/reducer.js","components/raw_material_selector/actions.js","components/raw_material_selector/reducer.js","components/sign_in/actions.js","components/sign_in/reducer.js","components/factory_selector/reducer.js","rootReducer.js","components/raw_material_popup/actions.js","components/factory_selector/actions.js","store.js","components/sells/Sells.js","components/machines/machine/Machine.js","components/machines/seller/Seller.js","components/machines/furnace/Furnace.js","components/machines/crafter/Crafter.js","components/machines/transporter/Transporter.js","components/actions/remove/Remove.js","components/actions/move/Move.js","components/actions/rotate/Rotate.js","components/machines/starter/Starter.js","components/cell/Cell.js","components/add_machine/AddMachine.js","components/action_machine/ActionForMachine.js","components/toolbox/ToolBox.js","components/machines/none_machine/NoneMachine.js","components/machines/machineCreator/MachineCreator.js","components/raw_material/RawMaterial.js","components/raw_material_selector/RawMaterialSelector.js","components/occultable/Occultable.js","components/raw_material_popup/RawMaterialPopup.js","components/factory/Factory.js","components/sign_in/SignIn.js","components/factory_selector/FactoryItem.js","components/factory_selector/FactorySelector.js","components/select_app_view/SelectAppView.js","App.js","serviceWorker.js","index.js"],"names":["row","_ref","y","column","_ref2","x","turnClockwise","_ref3","direction","rotation","positionAt","position","Object","objectSpread","isPositionAtDirection","toPosition","equals","left","right","opositeDirection","createFactoryBoard","size","board","Array","fill","map","_","index","reduce","rows","cells","cell","newMachine","NONE_MACHINE","columns","totalSells","actionSelected","removeMachine","factory","updatePositionWith","machineAt","undefined","callback","machine","defineProperty","ADD_MACHINE_ACTION","STARTER_MACHINE","TRANSPORTER_MACHINE","FURNACE_MACHINE","SELLER_MACHINE","CRAFTER_MACHINE","machineType","type","props","active","starterMachine","materials","transporterMachine","furnanceMachine","sellerMachine","crafterMachine","materialCount","noneMachine","tickMachine","tickToStarter","tickToTransporter","tickToFurnace","tickToSeller","tickToCrafter","withMaterialsTick","actions","positionToDeliverMaterials","canSendMaterials","concat","toConsumableArray","MATERIAL_ADDITION","action","theFactory","withMaterial","sell","sells","SELLS","addToSells","material","price","materialProfit","clearMaterials","state","meltMaterials","MATERIAL_DELETION","length","rotateMachine","fromPosition","materialForNoneMachine","materialForTransporter","materialForStarter","materialForFurnace","materialForSeller","materialForCrafter","factorySelected","tick","dispatch","getState","timer","setInterval","doTick","findMachinesToTick","getSetate","_getSetate$factory","name","id","objectWithoutProperties","fetch","method","body","JSON","stringify","headers","Content-Type","catch","error","console","log","tickTimer","findMachines","keys","filter","col","flat","starters","transporters","furnaces","sellers","crafters","machines","SELECT_ACTION","cleanActionState","actionType","positionSelected","_getState$factory$act","addMachine","moveMachine","initialState","visible","open","starterId","selected","signInAction","user","enteredUser","newFactoryName","newFactorySize","factories","rootReducer","combineReducers","arguments","activate","materialTo","findAndRotateMachine","machinesPositions","machineMutations","newFactory","mutation","mutatedFactory","clearTimeout","_id","rawMaterialPopUp","rawMaterialSelector","signIn","factorySelector","factoryName","factorySize","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","storeInstance","createStore","applyMiddleware","thunkMiddleware","connect","react_default","a","createElement","className","image","activeImg","inactiveImg","directionToRotation","transform","Machine","style","src","alt","Seller","onClick","Machine_Machine","connector","Furnace","Crafter","Transporter","Remove","Move","Rotate","Starter","selectRawMaterial","selectPosition","Cell","children","selectedMachineType","selectMachine","selectMachineForAddition","selectedActionType","selectAction","selectActionForMachine","ToolBox","Cell_Cell","components_add_machine_AddMachine","Starter_Starter","Seller_Seller","Furnace_Furnace","Crafter_Crafter","Transporter_Transporter","components_action_machine_ActionForMachine","Remove_Remove","Move_Move","Rotate_Rotate","MachineCreator","width","height","machines_starter_Starter","machines_transporter_Transporter","machines_furnace_Furnace","machines_seller_Seller","machines_crafter_Crafter","machines_none_machine_NoneMachine","mapMachine","RawMaterial","color","backgroundColor","starterPosition","rawMaterialSelected","materialType","newMaterial","RawMaterial_RawMaterial","Occultable","Occultable_Occultable","components_raw_material_selector_RawMaterialSelector","react","key","MachineCreator_MachineCreator","components_raw_material_popup_RawMaterialPopup","userChange","event","target","value","then","res","json","setFactories","onChange","e","FactoryItem","userName","newFactoryChangeName","newFactorySizeChange","parseInt","createFactory","response","selectFactory","find","f","placeholder","i","FactoryItem_FactoryItem","components_sign_in_SignIn","components_factory_selector_FactorySelector","components_sells_Sells","ToolBox_ToolBox","components_factory_Factory","App","react_redux_es","store","select_app_view_SelectAppView","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7d5d999.chunk.js","sourcesContent":["export const NORTH = 'NORTH'\nexport const EAST = 'EAST'\nexport const WEST = 'WEST'\nexport const SOUTH = 'SOUTH'\n\nexport const position = (row, cell) => {\n  return { y: row, x: cell }\n}\n\nexport const row = ({ y }) => {\n  return y\n}\n\nexport const column = ({ x }) => {\n  return x\n}\n\nexport const north = () => {\n  return {\n    direction: NORTH,\n    rotation: 0.5\n  }\n}\n\nexport const east = () => {\n  return {\n    direction: EAST,\n    rotation: 0.75\n  }\n}\n\nexport const west = () => {\n  return {\n    direction: WEST,\n    rotation: 0.25\n  }\n}\n\nexport const south = () => {\n  return {\n    direction: SOUTH,\n    rotation: 0.0\n  }\n}\n\nexport const turnClockwise = ({ direction }) => {\n  switch (direction) {\n    case NORTH:\n      return east()\n    case EAST:\n      return south()\n    case WEST:\n      return north()\n    case SOUTH:\n      return west()\n    default:\n      return south()\n  }\n}\n\nexport const positionAt = (position, direction) => {\n  switch (direction.direction) {\n    case NORTH:\n      return { ...position, y: position.y - 1 }\n    case EAST:\n      return { ...position, x: position.x + 1 }\n    case WEST:\n      return { ...position, x: position.x - 1 }\n    case SOUTH:\n      return { ...position, y: position.y + 1 }\n    default:\n      return { y: -1, x: -1 }\n  }\n}\n\nexport const isPositionAtDirection = (position, direction, toPosition) => {\n  return equals(positionAt(position, direction), toPosition)\n}\n\nexport const equals = (left, right) => {\n  return left.x === right.x && left.y === right.y\n}\n\nexport const opositeDirection = direction => {\n  switch (direction.direction) {\n    case NORTH:\n      return south()\n    case EAST:\n      return west()\n    case WEST:\n      return east()\n    case SOUTH:\n      return north()\n    default:\n      return undefined\n  }\n}\n\nexport const isPositionNeighbour = (position, toPosition) => {\n  return (\n    isPositionAtDirection(position, north(), toPosition) ||\n    isPositionAtDirection(position, south(), toPosition) ||\n    isPositionAtDirection(position, west(), toPosition) ||\n    isPositionAtDirection(position, east(), toPosition)\n  )\n}\n","import {\n  MATERIAL_ADDITION,\n  MATERIAL_DELETION,\n  newMachine,\n  NONE_MACHINE,\n  rotateMachine,\n  SELLS,\n  tickMachine,\n  withMaterial\n} from '../machines/machines'\nimport { column, position, row } from '../machines/direction'\n\nexport function emptyFactory () {\n  return { rows: 0, columns: 0, totalSells: 0 }\n}\n\nexport const createFactoryBoard = size => {\n  let board = Array(size)\n    .fill()\n    .map((_, index) => {\n      return {\n        y: index,\n        column: Array(size)\n          .fill()\n          .map((_, index) => {\n            return { x: index }\n          })\n      }\n    })\n    .reduce((rows, row) => {\n      rows[row.y] = row.column.reduce((cells, cell) => {\n        cells[cell.x] = newMachine(position(row.y, cell.x), NONE_MACHINE)\n        return cells\n      }, {})\n      return rows\n    }, {})\n\n  return {\n    ...board,\n    rows: size,\n    columns: size,\n    totalSells: 0,\n    actionSelected: {}\n  }\n}\n\nexport const addToSells = (sells, factory) => {\n  return {\n    ...factory,\n    totalSells: factory.totalSells + sells\n  }\n}\n\nexport const tick = (machinesPositions, factory) => {\n  const machineMutations = machinesPositions\n    .map(position => tickMachine(factory, position))\n    .flat(2)\n\n  let newFactory = factory\n\n  newFactory = machineMutations\n    .filter(mutation => mutation.type === SELLS)\n    .reduce(\n      (mutatedFactory, mutation) => mutation.action(mutatedFactory),\n      newFactory\n    )\n\n  newFactory = machineMutations\n    .filter(mutation => mutation.type === MATERIAL_DELETION)\n    .reduce(\n      (mutatedFactory, mutation) =>\n        updatePositionWith(\n          mutation.position,\n          _ => mutation.action(),\n          mutatedFactory\n        ),\n      newFactory\n    )\n\n  newFactory = machineMutations\n    .filter(mutation => mutation.type === MATERIAL_ADDITION)\n    .reduce(\n      (mutatedFactory, mutation) =>\n        updatePositionWith(\n          mutation.position,\n          _ => mutation.action(mutatedFactory),\n          mutatedFactory\n        ),\n      newFactory\n    )\n\n  return newFactory\n}\n\nexport const addMachine = (position, machineType, factory) => {\n  return updatePositionWith(\n    position,\n    _ => newMachine(position, machineType),\n    factory\n  )\n}\n\nexport const removeMachine = (position, factory) => {\n  return updatePositionWith(\n    position,\n    _ => newMachine(position, NONE_MACHINE),\n    factory\n  )\n}\n\nexport const moveMachine = (position, factory) => {\n  const machine = machineAt(position, factory)\n  return {\n    ...removeMachine(position, factory),\n    actionSelected: {\n      machineType: machine.type,\n      actionType: ADD_MACHINE_ACTION\n    }\n  }\n}\n\nexport const findAndRotateMachine = (position, factory) => {\n  return updatePositionWith(\n    position,\n    machine => rotateMachine(machine),\n    factory\n  )\n}\n\nexport const materialTo = (\n  position,\n  materials,\n  factory,\n  fromPosition = undefined\n) => {\n  return updatePositionWith(\n    position,\n    machine => withMaterial(machine, materials, fromPosition),\n    factory\n  )\n}\n\nexport function machineAt (position, factory) {\n  return factory[row(position)]\n    ? factory[row(position)][column(position)]\n    : undefined\n}\n\nexport function updatePositionWith (position, callback, factory) {\n  let machine = machineAt(position, factory)\n  return {\n    ...factory,\n    [row(position)]: {\n      ...factory[row(position)],\n      [column(position)]: callback(machine)\n    }\n  }\n}\n\nexport const ADD_MACHINE_ACTION = 'ADD_MACHINE_ACTION'\nexport const ROTATE_MACHINE_ACTION = 'ROTATE_MACHINE_ACTION'\nexport const MOVE_MACHINE_ACTION = 'MOVE_MACHINE_ACTION'\nexport const REMOVE_MACHINE_ACTION = 'REMOVE_MACHINE_ACTION'\n","import {\n  isPositionAtDirection,\n  isPositionNeighbour,\n  opositeDirection,\n  positionAt,\n  south,\n  turnClockwise\n} from './direction'\nimport { addToSells, machineAt } from '../factory/factoryLib'\nimport { materialProfit, meltMaterials } from './materials'\n\nexport const STARTER_MACHINE = 'STARTER_MACHINE'\nconst starterMachine = position => {\n  return {\n    type: STARTER_MACHINE,\n    props: {\n      position: position,\n      active: false,\n      direction: south()\n    }\n  }\n}\n\nexport const NONE_MACHINE = 'NONE_MACHINE'\nconst noneMachine = position => {\n  return {\n    type: NONE_MACHINE,\n    props: {\n      position: position,\n      materialCount: 0\n    }\n  }\n}\n\nexport const TRANSPORTER_MACHINE = 'TRANSPORTER_MACHINE'\nconst transporterMachine = position => {\n  return {\n    type: TRANSPORTER_MACHINE,\n    props: {\n      position: position,\n      active: false,\n      direction: south(),\n      materials: []\n    }\n  }\n}\n\nexport const FURNACE_MACHINE = 'FURNACE_MACHINE'\nconst furnanceMachine = position => {\n  return {\n    type: FURNACE_MACHINE,\n    props: {\n      position: position,\n      active: false,\n      direction: south(),\n      materials: []\n    }\n  }\n}\n\nexport const SELLER_MACHINE = 'SELLER_MACHINE'\nconst sellerMachine = position => {\n  return {\n    type: SELLER_MACHINE,\n    props: {\n      position: position,\n      active: false,\n      direction: south(),\n      materials: []\n    }\n  }\n}\n\nexport const CRAFTER_MACHINE = 'CRAFTER_MACHINE'\nconst crafterMachine = position => {\n  return {\n    type: CRAFTER_MACHINE,\n    props: {\n      position: position,\n      active: false,\n      direction: south(),\n      materials: []\n    }\n  }\n}\nexport const isNoneMachine = machine => {\n  return machine.type === NONE_MACHINE\n}\n\nexport const newMachine = (position, machineType) => {\n  switch (machineType) {\n    case STARTER_MACHINE:\n      return starterMachine(position)\n    case TRANSPORTER_MACHINE:\n      return transporterMachine(position)\n    case FURNACE_MACHINE:\n      return furnanceMachine(position)\n    case SELLER_MACHINE:\n      return sellerMachine(position)\n    case CRAFTER_MACHINE:\n      return crafterMachine(position)\n    default:\n      return noneMachine(position)\n  }\n}\n\nexport const tickMachine = (factory, position) => {\n  const machine = machineAt(position, factory)\n  switch (machine.type) {\n    case STARTER_MACHINE:\n      return tickToStarter(factory, machine)\n    case TRANSPORTER_MACHINE:\n      return tickToTransporter(factory, machine)\n    case FURNACE_MACHINE:\n      return tickToFurnace(factory, machine)\n    case SELLER_MACHINE:\n      return tickToSeller(factory, machine)\n    case CRAFTER_MACHINE:\n      return tickToCrafter(factory, machine)\n    default:\n      return []\n  }\n}\n\nconst withMaterialsTick = (factory, machine, materials, actions) => {\n  let positionToDeliverMaterials = positionAt(\n    machine.props.position,\n    machine.props.direction\n  )\n  if (canSendMaterials(factory, materials, positionToDeliverMaterials)) {\n    return [\n      ...actions,\n      {\n        type: MATERIAL_ADDITION,\n        action: theFactory =>\n          withMaterial(\n            machineAt(positionToDeliverMaterials, theFactory),\n            materials,\n            machine.props.position\n          ),\n        position: positionToDeliverMaterials\n      }\n    ]\n  }\n  return actions\n}\n\nconst sell = (sells, actions) => {\n  return [\n    ...actions,\n    {\n      type: SELLS,\n      action: factory => addToSells(sells, factory)\n    }\n  ]\n}\nconst tickToSeller = (factory, machine) => {\n  const sells = machine.props.materials\n    .map(material => materialProfit(material))\n    .reduce((totalSells, materialProfit) => totalSells + materialProfit, 0)\n  let actions = []\n  actions = clearMaterials(machine, actions)\n  actions = sell(sells, actions)\n  return actions\n}\n\nconst tickToFurnace = (factory, machine) => {\n  const materials = meltMaterials(machine.props.materials)\n  let actions = []\n  actions = withMaterialsTick(factory, machine, materials, actions)\n  actions = clearMaterials(machine, actions)\n  return actions\n}\n\nconst tickToTransporter = (factory, machine) => {\n  const materials = machine.props.materials\n  let actions = []\n  actions = withMaterialsTick(factory, machine, materials, actions)\n  actions = clearMaterials(machine, actions)\n  return actions\n}\n\nconst tickToCrafter = (factory, machine) => {\n  // TODO terminar de implementar el crafter\n  const materials = machine.props.materials\n  let actions = []\n  actions = withMaterialsTick(factory, machine, materials, actions)\n  actions = clearMaterials(machine, actions)\n  return actions\n}\n\nconst clearMaterials = (machine, actions) => {\n  const newMachine = {\n    ...machine,\n    props: {\n      ...machine.props,\n      materials: [],\n      active: false\n    }\n  }\n  return [\n    ...actions,\n    {\n      type: MATERIAL_DELETION,\n      action: () => newMachine,\n      position: machine.props.position\n    }\n  ]\n}\n\nconst tickToStarter = (factory, machine) => {\n  return withMaterialsTick(\n    factory,\n    machine,\n    machine.props.material ? [machine.props.material] : [],\n    []\n  )\n}\n\nconst canSendMaterials = (factory, materials, position) => {\n  return materials && materials.length > 0 && machineAt(position, factory)\n}\n\nexport const rotateMachine = machine => {\n  return {\n    ...machine,\n    props: {\n      ...machine.props,\n      direction: turnClockwise(machine.props.direction)\n    }\n  }\n}\n\nexport const pointTo = (machine, direction) => {\n  return { ...machine, props: { ...machine.props, direction: direction } }\n}\n\nexport const withMaterial = (machine, materials, fromPosition) => {\n  switch (machine.type) {\n    case NONE_MACHINE:\n      return materialForNoneMachine(machine, materials)\n    case TRANSPORTER_MACHINE:\n      return materialForTransporter(machine, materials, fromPosition)\n    case STARTER_MACHINE:\n      return materialForStarter(machine, materials)\n    case FURNACE_MACHINE:\n      return materialForFurnace(machine, materials, fromPosition)\n    case SELLER_MACHINE:\n      return materialForSeller(machine, materials, fromPosition)\n    case CRAFTER_MACHINE:\n      return materialForCrafter(machine, materials, fromPosition)\n    default:\n      return machine\n  }\n}\n\nconst materialForStarter = (machine, material) => {\n  return {\n    ...machine,\n    props: {\n      ...machine.props,\n      material: material\n    }\n  }\n}\n\nconst materialForFurnace = (machine, materials, fromPosition) => {\n  if (\n    isPositionAtDirection(\n      machine.props.position,\n      opositeDirection(machine.props.direction),\n      fromPosition\n    )\n  ) {\n    return {\n      ...machine,\n      props: {\n        ...machine.props,\n        materials: [...machine.props.materials, ...materials],\n        active: true\n      }\n    }\n  } else {\n    return machine\n  }\n}\n\nconst materialForSeller = (machine, materials, fromPosition) => {\n  if (isPositionNeighbour(machine.props.position, fromPosition)) {\n    return {\n      ...machine,\n      props: {\n        ...machine.props,\n        materials: [...machine.props.materials, ...materials],\n        active: true\n      }\n    }\n  } else {\n    return machine\n  }\n}\n\nconst materialForTransporter = (machine, materials, fromPosition) => {\n  if (\n    isPositionAtDirection(\n      machine.props.position,\n      machine.props.direction,\n      fromPosition\n    )\n  ) {\n    return machine\n  } else {\n    return {\n      ...machine,\n      props: {\n        ...machine.props,\n        materials: [...machine.props.materials, ...materials],\n        active: true\n      }\n    }\n  }\n}\n\nconst materialForCrafter = (machine, materials, fromPosition) => {\n  if (\n    isPositionAtDirection(\n      machine.props.position,\n      opositeDirection(machine.props.direction),\n      fromPosition\n    )\n  ) {\n    return {\n      ...machine,\n      props: {\n        ...machine.props,\n        materials: [...machine.props.materials, ...materials],\n        active: true\n      }\n    }\n  } else {\n    return machine\n  }\n}\n\nconst materialForNoneMachine = (machine, materials) => {\n  return {\n    ...machine,\n    props: {\n      ...machine.props,\n      materialCount: machine.props.materialCount + materials.length\n    }\n  }\n}\nexport const activate = machine => {\n  return {\n    ...machine,\n    props: {\n      ...machine.props,\n      active: true\n    }\n  }\n}\n\nexport const isOfType = (machine, type) => {\n  return machine.type === type\n}\n\nexport const MATERIAL_ADDITION = 'MATERIAL_ADDITION'\nexport const MATERIAL_DELETION = 'MATERIAL_DELETION'\nexport const SELLS = 'SELLS'\n","export const SILVER = 'SILVER'\nexport const CARBON = 'CARBON'\nexport const COBBER = 'COBBER'\nexport const IRON = 'IRON'\nexport const GOLD = 'GOLD'\n\nconst SOLID = 'SOLID'\nconst LIQUID = 'LIQUID'\n\nexport const isSolid = material => {\n  return material.state === SOLID\n}\n\nexport const newMaterial = materialType => {\n  switch (materialType) {\n    case SILVER:\n      return { type: SILVER, state: SOLID, price: 40 }\n    case CARBON:\n      return { type: CARBON, state: SOLID, price: 10 }\n    case COBBER:\n      return { type: COBBER, state: SOLID, price: 30 }\n    case IRON:\n      return { type: IRON, state: SOLID, price: 20 }\n    case GOLD:\n      return { type: GOLD, state: SOLID, price: 50 }\n    default:\n      return { type: CARBON, state: SOLID, price: 10 }\n  }\n}\n\nexport const meltMaterials = materials => {\n  return materials.map(material => {\n    return { ...material, state: LIQUID, price: material.price * 2 }\n  }, materials)\n}\n\nexport const materialProfit = material => {\n  return material.price\n}\n","import {\n  CRAFTER_MACHINE,\n  FURNACE_MACHINE,\n  isOfType,\n  NONE_MACHINE,\n  SELLER_MACHINE,\n  STARTER_MACHINE,\n  TRANSPORTER_MACHINE\n} from '../machines/machines'\nimport {\n  ADD_MACHINE_ACTION,\n  MOVE_MACHINE_ACTION,\n  REMOVE_MACHINE_ACTION,\n  ROTATE_MACHINE_ACTION\n} from './factoryLib'\n\nexport const MATERIAL_FOR_STARTER = 'MATERIAL_FOR_STARTER'\nexport const materialForStarter = (position, material) => {\n  return {\n    type: MATERIAL_FOR_STARTER,\n    position: position,\n    material\n  }\n}\n\nexport const RESET_FACTORY = 'RESET_FACTORY'\nexport const resetFactory = () => {\n  return {\n    type: RESET_FACTORY\n  }\n}\nexport const ADD_MACHINE = 'ADD_MACHINE'\nexport const addMachine = (position, machineType) => {\n  return {\n    type: ADD_MACHINE,\n    machineType: machineType,\n    position\n  }\n}\n\nexport const ROTATE = 'ROTATE'\nexport const rotateMachine = position => {\n  return {\n    type: ROTATE,\n    position\n  }\n}\n\nexport const REMOVE_MACHINE = 'REMOVE_MACHINE'\nexport const removeMachine = position => {\n  return {\n    type: REMOVE_MACHINE,\n    position\n  }\n}\n\nexport const MOVE_MACHINE = 'MOVE_MACHINE'\nexport const moveMachine = position => {\n  return {\n    type: MOVE_MACHINE,\n    position\n  }\n}\n\nexport const FACTORY_SELECTED = 'FACTORY_SELECTED'\nexport const factorySelected = factory => {\n  return {\n    type: FACTORY_SELECTED,\n    factory: factory\n  }\n}\n\nconst autosave = () => {\n  return (dispatch, getSetate) => {\n    const { name, id, ...board } = getSetate().factory\n\n    fetch('http://localhost:3000/api/save', {\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        id: id,\n        board: board\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).catch(error => {\n      // eslint-disable-next-line no-console\n      console.log(error)\n    })\n  }\n}\n\nexport const makeTick = () => {\n  return (dispatch, getState) => {\n    dispatch(doTick(findMachinesToTick(getState().factory)))\n  }\n}\nexport const TICK = 'TICK'\nexport const tick = () => {\n  return (dispatch, getState) => {\n    if (!getState().factory.timer) {\n      let timer = setInterval(() => {\n        dispatch(makeTick())\n        dispatch(autosave())\n      }, 5000)\n      dispatch(tickTimer(timer))\n    }\n  }\n}\n\nexport const SET_TICK_TIMER = 'SET_TICK_TIMER'\nexport const tickTimer = timer => {\n  return {\n    type: SET_TICK_TIMER,\n    timer: timer\n  }\n}\n\nconst findMachines = (factory, machineType) => {\n  const {\n    name,\n    id,\n    rows,\n    columns,\n    totalSells,\n    actionSelected,\n    ...board\n  } = factory\n  return Object.keys(board)\n    .map(row => {\n      return Object.keys(board[row])\n        .filter(col => isOfType(board[row][col], machineType))\n        .map(col => {\n          return { y: row, x: col }\n        })\n    })\n    .flat()\n}\nconst findMachinesToTick = factory => {\n  const starters = findMachines(factory, STARTER_MACHINE)\n  const transporters = findMachines(factory, TRANSPORTER_MACHINE)\n  const furnaces = findMachines(factory, FURNACE_MACHINE)\n  const sellers = findMachines(factory, SELLER_MACHINE)\n  const crafters = findMachines(factory, CRAFTER_MACHINE)\n  return [...sellers, ...furnaces, ...transporters, ...starters, ...crafters]\n}\n\nconst doTick = machines => {\n  return {\n    type: TICK,\n    machines: machines\n  }\n}\n\nexport const selectMachineForAddition = machineType => {\n  return {\n    type: SELECT_ACTION,\n    machineType: machineType,\n    actionType: ADD_MACHINE_ACTION\n  }\n}\n\nexport const SELECT_ACTION = 'SELECT_ACTION'\nexport const selectActionForMachine = actionType => {\n  return {\n    type: SELECT_ACTION,\n    machineType: NONE_MACHINE,\n    actionType: actionType\n  }\n}\n\nexport const cleanActionState = () => {\n  return {\n    type: SELECT_ACTION,\n    machineType: undefined,\n    actionType: undefined\n  }\n}\n\nexport const positionSelected = position => {\n  return (dispatch, getState) => {\n    const { machineType, actionType } = getState().factory.actionSelected\n    if (machineType && actionType) {\n      switch (actionType) {\n        case ADD_MACHINE_ACTION:\n          dispatch(addMachine(position, machineType))\n          dispatch(cleanActionState())\n          break\n        case ROTATE_MACHINE_ACTION:\n          dispatch(rotateMachine(position))\n          dispatch(cleanActionState())\n          break\n        case REMOVE_MACHINE_ACTION:\n          dispatch(removeMachine(position))\n          dispatch(cleanActionState())\n          break\n        case MOVE_MACHINE_ACTION:\n          dispatch(moveMachine(position))\n          break\n        default:\n          break\n      }\n    }\n  }\n}\n","import {\n  ADD_MACHINE,\n  FACTORY_SELECTED,\n  MATERIAL_FOR_STARTER,\n  MOVE_MACHINE,\n  REMOVE_MACHINE,\n  RESET_FACTORY,\n  ROTATE,\n  SELECT_ACTION,\n  SET_TICK_TIMER,\n  TICK\n} from './actions'\nimport {\n  addMachine,\n  createFactoryBoard,\n  findAndRotateMachine,\n  materialTo,\n  moveMachine,\n  removeMachine,\n  tick,\n  updatePositionWith\n} from './factoryLib'\nimport { activate } from '../machines/machines'\n\nconst initialState = createFactoryBoard(5)\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_FACTORY:\n      return {\n        name: state.name,\n        id: state.id,\n        ...createFactoryBoard(state.rows)\n      }\n    case MATERIAL_FOR_STARTER:\n      return updatePositionWith(\n        action.position,\n        machine => activate(machine),\n        materialTo(action.position, action.material, state)\n      )\n    case ADD_MACHINE:\n      return addMachine(action.position, action.machineType, state)\n    case ROTATE:\n      return findAndRotateMachine(action.position, state)\n    case REMOVE_MACHINE:\n      return removeMachine(action.position, state)\n    case MOVE_MACHINE:\n      return moveMachine(action.position, state)\n    case TICK:\n      return tick(action.machines, state)\n    case SET_TICK_TIMER:\n      return { ...state, timer: action.timer }\n    case SELECT_ACTION:\n      return {\n        ...state,\n        actionSelected: {\n          machineType: action.machineType,\n          actionType: action.actionType\n        }\n      }\n    case FACTORY_SELECTED:\n      clearTimeout(state.timer)\n      return {\n        ...action.factory.board,\n        name: action.factory.name,\n        id: action.factory._id,\n        actionSelected: {},\n        timer: undefined\n      }\n    default:\n      return state\n  }\n}\n","import { TOGGLE_RAW_MATERIAL_POPUP } from './actions'\n\nconst initialState = {\n  visible: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_RAW_MATERIAL_POPUP:\n      return { ...state, visible: !state.visible }\n    default:\n      return state\n  }\n}\n","import { toggleRawMaterialPopup } from '../raw_material_popup/actions'\nimport { materialForStarter } from '../factory/actions'\n\nexport const rawMaterialSelected = (starterPosition, material) => {\n  return dispatch => {\n    dispatch(toggleRawMaterialPopup())\n    dispatch(materialForStarter(starterPosition, material))\n  }\n}\n\nexport const openRawMaterialSelector = starterId => {\n  return dispatch => {\n    dispatch(toggleRawMaterialPopup())\n    dispatch(open(starterId))\n  }\n}\n\nexport const OPEN_RAW_MATERIAL = 'OPEN_RAW_MATERIAL'\nexport const open = starterId => {\n  return {\n    type: OPEN_RAW_MATERIAL,\n    starterId: starterId\n  }\n}\n","import { OPEN_RAW_MATERIAL } from './actions'\n\nconst initialState = {\n  selected: undefined\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_RAW_MATERIAL:\n      return { ...state, selected: action.starterId }\n    default:\n      return state\n  }\n}\n","import { setFactories } from '../factory_selector/actions'\n\nexport const ENTERED_USER_CHANGE = 'ENTERED_USER_CHANGE'\nexport const enteredUserChange = newEnteredUser => {\n  return {\n    type: ENTERED_USER_CHANGE,\n    enteredUser: newEnteredUser\n  }\n}\n\nexport const SIGN_IN = 'SIGN_IN'\nexport const signIn = () => {\n  return (dispatch, getState) => {\n    const user = getState().signIn.enteredUser\n    fetch('http://localhost:3000/api/sign_in', {\n      method: 'POST',\n      body: JSON.stringify({ user: user }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(_ => dispatch(signInAction()))\n      .then(_ => {\n        return fetch(`http://localhost:3000/api/factories?user=${user}`)\n      })\n      .then(res => res.json())\n      .then(factories => dispatch(setFactories(factories)))\n  }\n}\n\nexport const signInAction = () => {\n  return {\n    type: SIGN_IN\n  }\n}\n","import { ENTERED_USER_CHANGE, SIGN_IN } from './actions'\n\nexport const NONE_USER = '__NONE_USER__'\nconst initialState = {\n  user: NONE_USER,\n  enteredUser: undefined\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ENTERED_USER_CHANGE:\n      return { ...state, enteredUser: action.enteredUser }\n    case SIGN_IN:\n      return { ...state, user: state.enteredUser, enteredUser: undefined }\n    default:\n      return state\n  }\n}\n","import {\n  FACTORY_NAME_CHANGED,\n  FACTORY_SIZE_CHANGE,\n  CREATE_FACTORY,\n  SET_FACTORIES\n} from './actions'\n\nconst initialState = {\n  newFactoryName: undefined,\n  newFactorySize: 0,\n  factories: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FACTORY_NAME_CHANGED:\n      return { ...state, newFactoryName: action.factoryName }\n    case FACTORY_SIZE_CHANGE:\n      return { ...state, newFactorySize: action.factorySize }\n    case CREATE_FACTORY:\n      return initialState\n    case SET_FACTORIES:\n      return { ...state, factories: action.factories }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport factoryReducer from './components/factory/reducer'\nimport rawMaterialPopUpReducer from './components/raw_material_popup/reducer'\nimport rawMaterialSelectorReducer from './components/raw_material_selector/reducer'\nimport signInReducer from './components/sign_in/reducer'\nimport factorySelectorReducer from './components/factory_selector/reducer'\n\nexport const rootReducer = combineReducers({\n  factory: factoryReducer,\n  rawMaterialPopUp: rawMaterialPopUpReducer,\n  rawMaterialSelector: rawMaterialSelectorReducer,\n  signIn: signInReducer,\n  factorySelector: factorySelectorReducer\n})\n","export const TOGGLE_RAW_MATERIAL_POPUP = 'TOGGLE_RAW_MATERIAL_POPUP'\n\nexport const toggleRawMaterialPopup = () => {\n  return {\n    type: TOGGLE_RAW_MATERIAL_POPUP\n  }\n}\n","import { createFactoryBoard } from '../factory/factoryLib'\nimport { factorySelected } from '../factory/actions'\n\nexport const FACTORY_NAME_CHANGED = 'FACTORY_NAME_CHANGED'\nexport const newFactoryChangeName = newFactoryName => {\n  return {\n    type: FACTORY_NAME_CHANGED,\n    factoryName: newFactoryName\n  }\n}\n\nexport const FACTORY_SIZE_CHANGE = 'FACTORY_SIZE_CHANGE'\nexport const newFactorySizeChange = newFactorySize => {\n  return {\n    type: FACTORY_SIZE_CHANGE,\n    factorySize: parseInt(newFactorySize, 10)\n  }\n}\n\nexport const selectFactory = id => {\n  return (dispatch, getState) => {\n    const factory = getState().factorySelector.factories.find(f => f._id === id)\n    dispatch(factorySelected(factory))\n  }\n}\n\nexport const SET_FACTORIES = 'SET_FACTORIES'\nexport const setFactories = factories => {\n  return {\n    type: SET_FACTORIES,\n    factories: factories\n  }\n}\n\nexport const CREATE_FACTORY = 'CREATE_FACTORY'\nexport const createFactory = () => {\n  return (dispatch, getState) => {\n    fetch('http://localhost:3000/api/new_factory', {\n      method: 'POST',\n      body: JSON.stringify({\n        name: getState().factorySelector.newFactoryName,\n        size: getState().factorySelector.newFactorySize,\n        board: createFactoryBoard(getState().factorySelector.newFactorySize),\n        user: getState().signIn.user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(body => {\n        dispatch(factorySelected(body))\n      })\n  }\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport { rootReducer } from './rootReducer'\nimport thunkMiddleware from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nexport const storeInstance = createStore(\n  rootReducer,\n  undefined,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n","import './Sells.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nexport const Sells = ({ totalSells }) => {\n  return (\n    <div className=\"incomes-container\">\n      Ganancias <span className=\"incomes\">${totalSells}</span>\n    </div>\n  )\n}\n\nSells.propTypes = {\n  totalSells: PropTypes.number\n}\n\nconst mapStateToProps = state => {\n  return {\n    totalSells: state.factory.totalSells\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  undefined\n)(Sells)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst image = (active, activeImg, inactiveImg) => {\n  if (active) {\n    return activeImg\n  } else {\n    return inactiveImg\n  }\n}\n\nconst directionToRotation = direction => {\n  return {\n    transform: `rotate(${direction.rotation}turn)`\n  }\n}\n\nexport const Machine = ({ active, direction, activeImg, inactiveImg }) => {\n  return (\n    <img\n      style={directionToRotation(direction)}\n      src={image(active, activeImg, inactiveImg)}\n      alt=\"machine\"\n    />\n  )\n}\n\nMachine.propTypes = {\n  active: PropTypes.bool,\n  direction: PropTypes.object,\n  activeImg: PropTypes.string,\n  inactiveImg: PropTypes.string\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Seller.css'\nimport { connect } from 'react-redux'\nimport { positionSelected } from '../../factory/actions'\nimport { Machine } from '../machine/Machine'\n\nexport const Seller = ({ position, active, onClick, direction }) => {\n  return (\n    <div className=\"seller\" onClick={() => onClick(position)}>\n      <Machine\n        direction={direction}\n        activeImg=\"icons/seller_active.svg\"\n        inactiveImg=\"icons/seller.svg\"\n        active={active}\n      />\n    </div>\n  )\n}\n\nSeller.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  position: PropTypes.object,\n  direction: PropTypes.object\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: position => {\n    dispatch(positionSelected(position))\n  }\n})\n\nconst connector = connect(\n  undefined,\n  mapDispatchToProps\n)\nexport default connector(Seller)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Furnace.css'\nimport { connect } from 'react-redux'\nimport { positionSelected } from '../../factory/actions'\nimport { Machine } from '../machine/Machine'\n\nexport const Furnace = ({ position, active, onClick, direction }) => {\n  return (\n    <div className=\"furnace\" onClick={() => onClick(position)}>\n      <Machine\n        direction={direction}\n        activeImg=\"icons/furnace_active.svg\"\n        inactiveImg=\"icons/furnace.svg\"\n        active={active}\n      />\n    </div>\n  )\n}\n\nFurnace.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  position: PropTypes.object,\n  direction: PropTypes.object\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: position => {\n    dispatch(positionSelected(position))\n  }\n})\n\nconst connector = connect(\n  undefined,\n  mapDispatchToProps\n)\nexport default connector(Furnace)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Crafter.css'\nimport { connect } from 'react-redux'\nimport { positionSelected } from '../../factory/actions'\nimport { Machine } from '../machine/Machine'\n\nexport const Crafter = ({ position, active, onClick, direction }) => {\n  return (\n    <div className=\"crafter\" onClick={() => onClick(position)}>\n      <Machine\n        direction={direction}\n        activeImg=\"icons/crafter_active.svg\"\n        inactiveImg=\"icons/crafter.svg\"\n        active={active}\n      />\n    </div>\n  )\n}\n\nCrafter.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  position: PropTypes.object,\n  direction: PropTypes.object\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: position => {\n    dispatch(positionSelected(position))\n  }\n})\n\nconst connector = connect(\n  undefined,\n  mapDispatchToProps\n)\nexport default connector(Crafter)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Transporter.css'\nimport { connect } from 'react-redux'\nimport { positionSelected } from '../../factory/actions'\nimport { Machine } from '../machine/Machine'\n\nexport const Transporter = ({ position, active, onClick, direction }) => {\n  return (\n    <div className=\"transporter\" onClick={() => onClick(position)}>\n      <Machine\n        direction={direction}\n        activeImg=\"icons/transporter_active.svg\"\n        inactiveImg=\"icons/transporter.svg\"\n        active={active}\n      />\n    </div>\n  )\n}\n\nTransporter.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  position: PropTypes.object,\n  direction: PropTypes.object\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: position => {\n    dispatch(positionSelected(position))\n  }\n})\n\nconst connector = connect(\n  undefined,\n  mapDispatchToProps\n)\nexport default connector(Transporter)\n","import React from 'react'\nimport { Machine } from '../../machines/machine/Machine'\nimport PropTypes from 'prop-types'\n\nexport const Remove = ({ active, direction }) => {\n  return (\n    <div className=\"remove\">\n      <Machine\n        active={active}\n        direction={direction}\n        activeImg=\"icons/eliminar_active.svg\"\n        inactiveImg=\"icons/eliminar.svg\"\n      />\n    </div>\n  )\n}\n\nRemove.propTypes = {\n  active: PropTypes.bool,\n  direction: PropTypes.object\n}\n","import React from 'react'\nimport { Machine } from '../../machines/machine/Machine'\nimport PropTypes from 'prop-types'\n\nexport const Move = ({ active, direction }) => {\n  return (\n    <div className=\"move\">\n      <Machine\n        active={active}\n        direction={direction}\n        activeImg=\"icons/mover_active.svg\"\n        inactiveImg=\"icons/mover.svg\"\n      />\n    </div>\n  )\n}\n\nMove.propTypes = {\n  active: PropTypes.bool,\n  direction: PropTypes.object\n}\n","import React from 'react'\nimport { Machine } from '../../machines/machine/Machine'\nimport PropTypes from 'prop-types'\n\nexport const Rotate = ({ active, direction }) => {\n  return (\n    <div className=\"rotate\">\n      <Machine\n        active={active}\n        direction={direction}\n        activeImg=\"icons/rotar_active.svg\"\n        inactiveImg=\"icons/rotar.svg\"\n      />\n    </div>\n  )\n}\n\nRotate.propTypes = {\n  active: PropTypes.bool,\n  direction: PropTypes.object\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Starter.css'\nimport { connect } from 'react-redux'\nimport { positionSelected } from '../../factory/actions'\nimport { Machine } from '../machine/Machine'\nimport { openRawMaterialSelector } from '../../raw_material_selector/actions'\n\nconst onClick = (\n  position,\n  selectRawMaterial,\n  selectPosition,\n  actionSelected\n) => {\n  if (actionSelected) {\n    selectPosition(position)\n  } else {\n    selectRawMaterial(position)\n  }\n}\n\nexport const Starter = ({\n  position,\n  active,\n  selectRawMaterial,\n  selectPosition,\n  actionSelected,\n  direction\n}) => {\n  return (\n    <div\n      className=\"starter\"\n      onClick={() =>\n        onClick(position, selectRawMaterial, selectPosition, actionSelected)\n      }\n    >\n      <Machine\n        direction={direction}\n        activeImg=\"icons/starter_active.svg\"\n        inactiveImg=\"icons/starter.svg\"\n        active={active}\n      />\n    </div>\n  )\n}\n\nStarter.propTypes = {\n  active: PropTypes.bool,\n  selectRawMaterial: PropTypes.func,\n  selectPosition: PropTypes.func,\n  actionSelected: PropTypes.string,\n  position: PropTypes.object,\n  direction: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    actionSelected: state.factory.actionSelected.actionType\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  selectRawMaterial: position => dispatch(openRawMaterialSelector(position)),\n  selectPosition: position => dispatch(positionSelected(position))\n})\n\nconst connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\nexport default connector(Starter)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Cell.css'\n\nexport const Cell = ({ className, children }) => {\n  return <div className={`cell ${className || ''}`}>{children}</div>\n}\n\nCell.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.object\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { selectMachineForAddition } from '../factory/actions'\nimport { connect } from 'react-redux'\nimport './AddMachine.css'\nexport const AddMachine = ({\n  machineType,\n  children,\n  selectMachine,\n  selectedMachineType\n}) => {\n  const selected = machineType === selectedMachineType\n  return (\n    <div\n      onClick={() => selectMachine(machineType)}\n      className={`add_machine ${selected ? 'add_machine_active' : ''}`}\n    >\n      {children}\n    </div>\n  )\n}\n\nAddMachine.propTypes = {\n  machineType: PropTypes.string,\n  children: PropTypes.object,\n  selectMachine: PropTypes.func,\n  selectedMachineType: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedMachineType: state.factory.actionSelected.machineType\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectMachine: machineType =>\n      dispatch(selectMachineForAddition(machineType))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddMachine)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { selectActionForMachine } from '../factory/actions'\nimport { connect } from 'react-redux'\nimport './ActionForMachine.css'\n\nexport const ActionForMachine = ({\n  actionType,\n  children,\n  selectAction,\n  selectedActionType\n}) => {\n  const selected = actionType === selectedActionType\n  return (\n    <div\n      onClick={() => selectAction(actionType)}\n      className={`action_machine ${selected ? 'action_machine_active' : ''}`}\n    >\n      {children}\n    </div>\n  )\n}\n\nActionForMachine.propTypes = {\n  actionType: PropTypes.string,\n  children: PropTypes.object,\n  selectAction: PropTypes.func,\n  selectedActionType: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedActionType: state.factory.actionSelected.actionType\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectAction: actionType => dispatch(selectActionForMachine(actionType))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActionForMachine)\n","import React from 'react'\nimport './ToolBox.css'\nimport { Seller } from '../machines/seller/Seller'\nimport { Furnace } from '../machines/furnace/Furnace'\nimport { Crafter } from '../machines/crafter/Crafter'\nimport { Transporter } from '../machines/transporter/Transporter'\nimport { Remove } from '../actions/remove/Remove'\nimport { Move } from '../actions/move/Move'\nimport { Rotate } from '../actions/rotate/Rotate'\nimport { Starter } from '../machines/starter/Starter'\nimport { Cell } from '../cell/Cell'\nimport { south } from '../machines/direction'\nimport {\n  CRAFTER_MACHINE,\n  FURNACE_MACHINE,\n  SELLER_MACHINE,\n  STARTER_MACHINE,\n  TRANSPORTER_MACHINE\n} from '../machines/machines'\nimport AddMachine from '../add_machine/AddMachine'\nimport ActionForMachine from '../action_machine/ActionForMachine'\nimport {\n  MOVE_MACHINE_ACTION,\n  REMOVE_MACHINE_ACTION,\n  ROTATE_MACHINE_ACTION\n} from '../factory/factoryLib'\n\nexport const ToolBox = () => {\n  return (\n    <div className=\"toolbox-container\">\n      <div className=\"title\">Máquinas</div>\n      <div className=\"toolbox-board\">\n        <div className=\"row\">\n          <Cell>\n            <AddMachine machineType={STARTER_MACHINE}>\n              <Starter direction={south()} selectRawMaterial={() => {}} />\n            </AddMachine>\n          </Cell>\n          <Cell>\n            <AddMachine machineType={SELLER_MACHINE}>\n              <Seller direction={south()} onClick={() => {}} />\n            </AddMachine>\n          </Cell>\n        </div>\n\n        <div className=\"row\">\n          <Cell>\n            <AddMachine machineType={FURNACE_MACHINE}>\n              <Furnace direction={south()} onClick={() => {}} />\n            </AddMachine>\n          </Cell>\n          <Cell>\n            <AddMachine machineType={CRAFTER_MACHINE}>\n              <Crafter direction={south()} onClick={() => {}} />\n            </AddMachine>\n          </Cell>\n        </div>\n        <div className=\"row\">\n          <Cell>\n            <AddMachine machineType={TRANSPORTER_MACHINE}>\n              <Transporter direction={south()} onClick={() => {}} />\n            </AddMachine>\n          </Cell>\n          <Cell />\n        </div>\n      </div>\n\n      <div className=\"title\">Edición</div>\n      <div className=\"toolbox-board\">\n        <div className=\"row\">\n          <Cell>\n            <ActionForMachine actionType={REMOVE_MACHINE_ACTION}>\n              <Remove direction={south()} />\n            </ActionForMachine>\n          </Cell>\n          <Cell>\n            <ActionForMachine actionType={MOVE_MACHINE_ACTION}>\n              <Move direction={south()} />\n            </ActionForMachine>\n          </Cell>\n        </div>\n        <div className=\"row\">\n          <Cell>\n            <ActionForMachine actionType={ROTATE_MACHINE_ACTION}>\n              <Rotate direction={south()} />\n            </ActionForMachine>\n          </Cell>\n          <Cell />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { positionSelected } from '../../factory/actions'\nimport { connect } from 'react-redux'\nimport './NoneMachine.css'\n\nexport const NoneMachine = ({ position, materialCount, onClick }) => {\n  return (\n    <div className={'none_machine'} onClick={() => onClick(position)}>\n      {materialCount <= 0 ? <span /> : <span>{materialCount}</span>}\n    </div>\n  )\n}\n\nNoneMachine.propTypes = {\n  materialCount: PropTypes.number,\n  position: PropTypes.object,\n  onClick: PropTypes.func\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: position => dispatch(positionSelected(position))\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(NoneMachine)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Starter from '../starter/Starter'\nimport NoneMachine from '../none_machine/NoneMachine'\nimport Transporter from '../transporter/Transporter'\nimport Furnace from '../furnace/Furnace'\nimport Seller from '../seller/Seller'\nimport Crafter from '../crafter/Crafter'\nimport {\n  CRAFTER_MACHINE,\n  FURNACE_MACHINE,\n  SELLER_MACHINE,\n  STARTER_MACHINE,\n  TRANSPORTER_MACHINE\n} from '../machines'\nimport { column, row } from '../direction'\n\nfunction mapMachine (machine) {\n  switch (machine.type) {\n    case STARTER_MACHINE:\n      return <Starter {...machine.props} />\n    case TRANSPORTER_MACHINE:\n      return <Transporter {...machine.props} />\n    case FURNACE_MACHINE:\n      return <Furnace {...machine.props} />\n    case SELLER_MACHINE:\n      return <Seller {...machine.props} />\n    case CRAFTER_MACHINE:\n      return <Crafter {...machine.props} />\n    default:\n      return <NoneMachine {...machine.props} />\n  }\n}\n\nexport const MachineCreator = ({ machine }) => {\n  let position = machine.props.position\n  return (\n    <div\n      style={{ width: '100%', height: '100%' }}\n      position={`${row(position)}${column(position)}`}\n    >\n      {mapMachine(machine)}\n    </div>\n  )\n}\n\nMachineCreator.propTypes = {\n  machine: PropTypes.object\n}\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport './RawMaterial.css'\n\nexport const RawMaterial = ({ color, name, className, onClick }) => {\n  return (\n    <div className={`raw-material ${className || ''}`} onClick={onClick}>\n      <div\n        style={{ backgroundColor: color }}\n        className=\"raw-material-item raw-material-color\"\n      />\n      <span className=\"raw-material-item raw_material-name\">{name}</span>\n    </div>\n  )\n}\n\nRawMaterial.propTypes = {\n  color: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func\n}\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport './RawMaterialSelector.css'\nimport { RawMaterial } from '../raw_material/RawMaterial'\nimport { connect } from 'react-redux'\nimport { rawMaterialSelected } from './actions'\nimport {\n  CARBON,\n  COBBER,\n  GOLD,\n  IRON,\n  newMaterial,\n  SILVER\n} from '../machines/materials'\n\nexport const RawMaterialSelector = ({\n  starterPosition,\n  rawMaterialSelected\n}) => {\n  return (\n    <div className=\"raw-material-selector\">\n      <RawMaterial\n        className=\"raw-material-selector-item\"\n        color=\"yellow\"\n        name=\"Oro\"\n        onClick={() => rawMaterialSelected(starterPosition, GOLD)}\n      />\n      <RawMaterial\n        className=\"raw-material-selector-item\"\n        color=\"orange\"\n        name=\"Cobre\"\n        onClick={() => rawMaterialSelected(starterPosition, COBBER)}\n      />\n      <RawMaterial\n        className=\"raw-material-selector-item\"\n        color=\"silver\"\n        name=\"Aluminio\"\n        onClick={() => rawMaterialSelected(starterPosition, SILVER)}\n      />\n      <RawMaterial\n        className=\"raw-material-selector-item\"\n        color=\"black\"\n        name=\"Carbon\"\n        onClick={() => rawMaterialSelected(starterPosition, CARBON)}\n      />\n      <RawMaterial\n        className=\"raw-material-selector-item\"\n        color=\"darkgrey\"\n        name=\"Hierro\"\n        onClick={() => rawMaterialSelected(starterPosition, IRON)}\n      />\n    </div>\n  )\n}\n\nRawMaterialSelector.propTypes = {\n  starterPosition: PropTypes.object,\n  rawMaterialSelected: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    starterPosition: state.rawMaterialSelector.selected\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    rawMaterialSelected: (position, material) =>\n      dispatch(rawMaterialSelected(position, newMaterial(material)))\n  }\n}\n\nconst connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default connector(RawMaterialSelector)\n","import React from 'react'\n\nexport const Occultable = ({ visible, children }) => {\n  if (visible) {\n    return children\n  } else {\n    return <div />\n  }\n}\n","import RawMaterialSelector from '../raw_material_selector/RawMaterialSelector'\nimport React from 'react'\nimport { Occultable } from '../occultable/Occultable'\nimport { PropTypes } from 'prop-types'\nimport './RawMaterialPopup.css'\nimport { connect } from 'react-redux'\n\nexport const RawMaterialPopup = ({ visible }) => {\n  return (\n    <Occultable visible={visible}>\n      <div className=\"raw-material-popup\">\n        <div className=\"raw-material-popup-container\">\n          <RawMaterialSelector />\n        </div>\n      </div>\n    </Occultable>\n  )\n}\n\nRawMaterialPopup.propTypes = {\n  visible: PropTypes.bool\n}\n\nconst mapStateToProps = state => state.rawMaterialPopUp\n\nconst connector = connect(\n  mapStateToProps,\n  undefined\n)\nexport default connector(RawMaterialPopup)\n","import { Cell } from '../cell/Cell'\nimport React, { Fragment } from 'react'\nimport { MachineCreator } from '../machines/machineCreator/MachineCreator'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { tick } from './actions'\nimport './Factory.css'\nimport RawMaterialPopup from '../raw_material_popup/RawMaterialPopup'\n\nexport const Factory = ({ factory, tick }) => {\n  tick()\n  const {\n    name,\n    id,\n    rows,\n    columns,\n    totalSells,\n    actionSelected,\n    timer,\n    ...board\n  } = factory\n  return (\n    <Fragment>\n      <div className=\"factory\">\n        <table>\n          <tbody>\n            {Object.keys(board)\n              .map(row => {\n                return (\n                  <tr key={row}>\n                    {Object.keys(board[row]).map(col => {\n                      return (\n                        <td key={col}>\n                          <Cell className=\"factory_item\">\n                            <MachineCreator machine={board[row][col]} />\n                          </Cell>\n                        </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })\n              .flat(1)}\n          </tbody>\n        </table>\n      </div>\n      <RawMaterialPopup />\n    </Fragment>\n  )\n}\n\nFactory.propTypes = {\n  factory: PropTypes.object,\n  tick: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    factory: state.factory\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tick: () => dispatch(tick())\n  }\n}\n\nconst connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\nexport default connector(Factory)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { enteredUserChange, signIn } from './actions'\nimport './SignIn.css'\nconst SignIn = ({ userChange, signIn, user }) => {\n  return (\n    <div className=\"sign_in_container\">\n      <div className=\"sign_in_form\">\n        <h1>Sign In! </h1>\n        <input\n          className=\"sign_in_form_input\"\n          type=\"text\"\n          value={user}\n          onChange={e => userChange(e)}\n        />\n        <button className=\"sign_in_form_button\" onClick={() => signIn()}>\n          Sign In\n        </button>\n      </div>\n    </div>\n  )\n}\n\nSignIn.propTypes = {\n  userChange: PropTypes.func,\n  signIn: PropTypes.func,\n  user: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signIn.enteredUser\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userChange: event => dispatch(enteredUserChange(event.target.value)),\n    signIn: () => dispatch(signIn())\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './FactoryItem.css'\n\nexport const FactoryItem = ({ name, onClick }) => {\n  return (\n    <div className=\"factory_selector_item\">\n      <span className=\"factory_selector_item_name\">{name}</span>\n      <button className=\"factory_selector_item_button\" onClick={onClick}>\n        {'=>'}\n      </button>\n    </div>\n  )\n}\n\nFactoryItem.propTypes = {\n  name: PropTypes.string,\n  onClick: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  newFactoryChangeName,\n  newFactorySizeChange,\n  createFactory,\n  selectFactory\n} from './actions'\nimport './FactorySelector.css'\nimport { FactoryItem } from './FactoryItem'\n\nconst FactorySelector = ({\n  userName,\n  newFactoryName,\n  newFactorySize,\n  newFactoryChangeName,\n  newFactorySizeChange,\n  createFactory,\n  factories,\n  selectFactory\n}) => {\n  return (\n    <div className=\"factory_selector_container\">\n      <div className=\"factory_selector_form\">\n        <h1>Whale cum {userName}! </h1>\n        <br />\n        <input\n          className=\"factory_selector_form_input\"\n          placeholder=\"Factory Name\"\n          type=\"text\"\n          value={newFactoryName}\n          onChange={e => newFactoryChangeName(e)}\n        />\n        <input\n          className=\"factory_selector_form_input\"\n          placeholder=\"Factory Size\"\n          type=\"number\"\n          value={newFactorySize}\n          onChange={e => newFactorySizeChange(e)}\n        />\n        <button\n          className=\"factory_selector_form_button\"\n          onClick={() => createFactory()}\n        >\n          Create Factory\n        </button>\n        {factories.map((f, i) => {\n          return (\n            <FactoryItem\n              key={i}\n              name={f.name}\n              onClick={() => selectFactory(f._id)}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nFactorySelector.propTypes = {\n  userName: PropTypes.string,\n  newFactoryName: PropTypes.string,\n  newFactorySize: PropTypes.number,\n  newFactoryChangeName: PropTypes.func,\n  newFactorySizeChange: PropTypes.func,\n  createFactory: PropTypes.func,\n  factories: PropTypes.array,\n  selectFactory: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    userName: state.signIn.user,\n    newFactoryName: state.factorySelector.newFactoryName,\n    newFactorySize: state.factorySelector.newFactorySize,\n    factories: state.factorySelector.factories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    newFactoryChangeName: e => dispatch(newFactoryChangeName(e.target.value)),\n    newFactorySizeChange: e => dispatch(newFactorySizeChange(e.target.value)),\n    createFactory: () => dispatch(createFactory()),\n    selectFactory: id => dispatch(selectFactory(id))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FactorySelector)\n","import React, { Fragment } from 'react'\nimport Sells from '../sells/Sells'\nimport { ToolBox } from '../toolbox/ToolBox'\nimport Factory from '../factory/Factory'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { NONE_USER } from '../sign_in/reducer'\nimport SignIn from '../sign_in/SignIn'\nimport FactorySelector from '../factory_selector/FactorySelector'\n\nconst SelectAppView = ({ user, factoryName }) => {\n  if (user === NONE_USER) {\n    return <SignIn />\n  } else if (factoryName === undefined) {\n    return <FactorySelector />\n  } else {\n    return (\n      <Fragment>\n        <Sells />\n        <ToolBox />\n        <Factory />\n      </Fragment>\n    )\n  }\n}\n\nSelectAppView.propTypes = {\n  user: PropTypes.string,\n  factoryName: PropTypes.string\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signIn.user,\n    factoryName: state.factory.name\n  }\n}\n\nconst connector = connect(\n  mapStateToProps,\n  undefined\n)\n\nexport default connector(SelectAppView)\n","import React from 'react'\nimport './App.css'\nimport { storeInstance } from './store'\nimport { Provider } from 'react-redux'\nimport SelectAppView from './components/select_app_view/SelectAppView'\n\nconst App = () => {\n  return (\n    <Provider store={storeInstance}>\n      <div className=\"App\">\n        <SelectAppView />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {})\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      return error\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {})\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}